apiVersion: v1
kind: Namespace
metadata:
  name: blog-app
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongodb
  namespace: blog-app
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: blog-app
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      serviceAccountName: mongodb
      containers:
        - name: mongodb
          image: docker.io/library/mongo@sha256:2a1093b275d9bc546135ec2e2484bb546b2a92f284b4b11c6a34275f4a963914
          imagePullPolicy: Always
          ports:
            - containerPort: 27017
          envFrom:
            - secretRef:
                name: mongodb-creds
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-data
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: blog-app
spec:
  clusterIP: None
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: posts
  namespace: blog-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: posts
  namespace: blog-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: posts
      version: v1
  template:
    metadata:
      labels:
        app: posts
        version: v1
    spec:
      serviceAccountName: posts
      containers:
        - name: posts
          image: docker.io/bharamicrosystems/mdo-posts@sha256:b5bc1fc976a93a88cc312d24916bd1423dbb3efe25eae922bae7bf16f3ca7326
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: MONGO_INITDB_ROOT_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: posts
  namespace: blog-app
spec:
  selector:
    app: posts
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: reviews
  namespace: blog-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews
  namespace: blog-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
    spec:
      serviceAccountName: reviews
      containers:
        - name: reviews
          image: docker.io/bharamicrosystems/mdo-reviews@sha256:07370e90859000ff809b1cd1fd2fc45a14c5ad46e8e8ca3dbd68ba7dc4fce23c
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: MONGO_INITDB_ROOT_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: reviews
  namespace: blog-app
spec:
  selector:
    app: reviews
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ratings
  namespace: blog-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings
  namespace: blog-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
      version: v1
  template:
    metadata:
      labels:
        app: ratings
        version: v1
    spec:
      serviceAccountName: ratings
      containers:
        - name: ratings
          image: docker.io/bharamicrosystems/mdo-ratings@sha256:271981faefafb86c2d30f7d3ce39cd8b977b7dd07c022b9ed47e4e6ec5dff1b3
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: MONGO_INITDB_ROOT_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: ratings
  namespace: blog-app
spec:
  selector:
    app: ratings
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v2
  namespace: blog-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
      version: v2
  template:
    metadata:
      labels:
        app: ratings
        version: v2
    spec:
      serviceAccountName: ratings
      containers:
        - name: ratings
          image: docker.io/bharamicrosystems/mdo-ratings-v2@sha256:5480d5d6e3959b9ae5f7ae98a6135f0fd7b2f5302d76b99c709d75bb0c86565a
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: MONGO_INITDB_ROOT_PASSWORD
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: users
  namespace: blog-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  namespace: blog-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
      version: v1
  template:
    metadata:
      labels:
        app: users
        version: v1
    spec:
      serviceAccountName: users
      containers:
        - name: users
          image: docker.io/bharamicrosystems/mdo-users@sha256:5f5aa595bc03c53b86dadf39c928eff4b3f0553323999d9e59cec283723e0a0a
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: MONGO_INITDB_ROOT_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: users
  namespace: blog-app
spec:
  selector:
    app: users
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  namespace: blog-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: blog-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
      version: v1
  template:
    metadata:
      labels:
        app: frontend
        version: v1
    spec:
      serviceAccountName: frontend
      containers:
        - name: frontend
          image: docker.io/bharamicrosystems/mdo-frontend@sha256:873526fe6de10e04c42566bbaa47b76c18f265fd65aab29ddf3fa81f957e1a44
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: blog-app
spec:
  selector:
    app: frontend
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
